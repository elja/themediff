REPLACE
function CheckoutController(#{.+}) {
#{[\S\s]+}
this.initialize();
}
WITH
function CheckoutController(state) {
  this.state = state;
  this.initialize();
}
END

REPLACE_IGNORE
$('.content-item.payment input#same-as-shipping-contact').live('click', function (event) {
WITH
$('.content-item.payment input#same-as-shipping-contact').live('click', function (event) {
self.contactJson = $(this).data('shipping');
END

REPLACE_IGNORE
CheckoutController.prototype._updateAddress = function(selector, data) {
    var container = $(selector);
    container.find('input.first-address').val(data.first_address);
    container.find('input.second-address').val(data.second_address);
    container.find('input.city').val(data.city);
    container.find('.country select').val(data.country).trigger('change');;
    container.find('.state select').val(data.state).trigger('change');;
    container.find('input.zip').val(data.zip);
    $('.content-item .address select').trigger("liszt:updated");
};
WITH
CheckoutController.prototype._updateAddress = function(selector, data) {
    var container = $(selector);
    container.find('input.company').val(data.company);
    container.find('input.first-address').val(data.first_address);
    container.find('input.second-address').val(data.second_address);
    container.find('input.city').val(data.city);
    container.find('.country select').val(data.country).trigger('change');
    container.find('.state select').val(data.state).trigger('change');
    container.find('input.zip').val(data.zip);
    container.find('input.first-name').val(data.first_name);
    container.find('input.last-name').val(data.last_name);
    container.find('input.email').val(data.email);
    container.find('input.phone').val(data.phone);
    container.find('select').trigger("liszt:updated");
};
END

REPLACE
self.prepareShippingMethods();
WITH
END

REPLACE
self.addressJson
WITH
$(this).data('shipping')
END

REPLACE
promotion_adjustments
WITH
coupons
END
