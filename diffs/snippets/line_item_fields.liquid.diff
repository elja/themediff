REPLACE
{% assign line_item = ff.object %}
{% assign product = line_item.product %}
WITH
END

REPLACE
product.name
WITH
line_item.name
END

REPLACE
{% if product.vendors != empty %}
<p>
    by {{ product.vendor_names }}
</p>
{% endif %}
WITH
{% if line_item.vendors != empty %}
  <p>
    by {{ line_item.vendor_names }}
  </p>
{% endif %}
END

REPLACE
<p>
  {% form_field 'ff.error', 'quantity' %}
</p>
WITH
{% if line_item.errors contains 'quantity' %}
  <p>
    <span class="error">{{ line_item.errors['quantity'] }}</span>
  </p>
{% endif %}
END

REPLACE
{% if line_item.ordered_modifications != empty %}
  {% for choice in line_item.grouped_choices %}
  {% assign group = choice.product_option_group %}
  {% assign option = choice.product_option %}

  <div class="product-option-grouping-element container">
      {% if group and group.product_options != empty %}
          {% include 'product_option_group_attributes' group: group, line_item: line_item %}
      {% elsif option %}
          {% include 'product_option_attributes' option: option, line_item: line_item %}
      {% endif %}
  </div>
  {% endfor %}
{% endif %}
WITH
{% assign rendered_groups = '' %}
{% for choice in line_item.choices %}
  <div class="product-option-grouping-element container">
    {% if choice.has_group? %}
      {% capture group_id %}[{{ choice.group.id }}]{% endcapture %}
      {% unless rendered_groups contains group_id %}
        {% include 'product_option_group_attributes', group: choice.group, choices: line_item.choices.groups[choice.group.id] %}
        {% assign rendered_groups = rendered_groups | append: group_id %}
      {% endunless %}
    {% else %}
      {% include 'product_option_attributes' option: choice.option, sub_option: choice.sub_option %}
    {% endif %}
  </div>
{% endfor %}
END

REPLACE
line_item.price_with_quantity_discount | points_or_currency
WITH
line_item.price_after_discount | points_or_currency
END

REPLACE
{{ line_item.price_with_quantity_discount | minus: line_item.options_price | points_or_currency }}
WITH
{{ line_item.product_price | points_or_currency }}
END


REPLACE
{% if line_item.has_quantity_errors %}
    {% form_field 'ff.text_field', 'quantity', { "class": "quantity custom-input-text clearHint error" }%}
{% else %}
    {% form_field 'ff.text_field', 'quantity', { "class": "quantity custom-input-text clearHint" }%}
{% endif %}

{% form_field 'ff.hidden_field', 'id' %}
WITH
<input class="quantity custom-input-text clearHint{% if line_item.errors contains 'quantity' %} error{% endif %}"
       type="text" name="line_items[{{ line_item.id }}][quantity]" value="{{ line_item.quantity }}"/>

{% if shop.store_enabled? and wishlist_item == true %}
  <a href="{{ line_item | move_line_item_to_cart_url }}" class="btn move-item-to-cart" data-method="post">Cart ></a>
{% endif %}
END


